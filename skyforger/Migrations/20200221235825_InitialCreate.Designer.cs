// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using skyforger.models;

namespace skyforger.Migrations
{
    [DbContext(typeof(SkyforgerContext))]
    [Migration("20200221235825_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("skyforger.models.ManaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManaTypeEnum")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpellId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpellId");

                    b.ToTable("ManaTypes");
                });

            modelBuilder.Entity("skyforger.models.SpellComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpellComponentEnum")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpellId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpellId");

                    b.ToTable("SpellComponent");
                });

            modelBuilder.Entity("skyforger.models.SpellDescriptor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpellDescriptorEnum")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpellId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpellId");

                    b.ToTable("SpellDescriptors");
                });

            modelBuilder.Entity("skyforger.models.SpellSchool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpellId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpellSchoolEnum")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpellId");

                    b.ToTable("SpellSchools");
                });

            modelBuilder.Entity("skyforger.models.SpellSubSchool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpellId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpellSubSchoolEnum")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpellId");

                    b.ToTable("SpellSubSchools");
                });

            modelBuilder.Entity("skyforger.models.common.ManaClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManaClassEnum")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpellId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpellId");

                    b.ToTable("ManaClasses");
                });

            modelBuilder.Entity("skyforger.models.spells.Focus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FocusName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SpellId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpellId");

                    b.ToTable("Focus");
                });

            modelBuilder.Entity("skyforger.models.spells.MaterialComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Component")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SpellId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpellId");

                    b.ToTable("MaterialComponent");
                });

            modelBuilder.Entity("skyforger.models.spells.Spell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Effect")
                        .HasColumnType("TEXT");

                    b.Property<string>("ManaDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Range")
                        .HasColumnType("TEXT");

                    b.Property<string>("SavingThrow")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchoolRaw")
                        .HasColumnType("TEXT");

                    b.Property<int>("SpellLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpellResistance")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpellUri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Target")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Valid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("skyforger.models.spells.SpellAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpellId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimeFactor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpellId");

                    b.ToTable("SpellAction");
                });

            modelBuilder.Entity("skyforger.models.ManaType", b =>
                {
                    b.HasOne("skyforger.models.spells.Spell", null)
                        .WithMany("Mana")
                        .HasForeignKey("SpellId");
                });

            modelBuilder.Entity("skyforger.models.SpellComponent", b =>
                {
                    b.HasOne("skyforger.models.spells.Spell", null)
                        .WithMany("Components")
                        .HasForeignKey("SpellId");
                });

            modelBuilder.Entity("skyforger.models.SpellDescriptor", b =>
                {
                    b.HasOne("skyforger.models.spells.Spell", null)
                        .WithMany("Descriptor")
                        .HasForeignKey("SpellId");
                });

            modelBuilder.Entity("skyforger.models.SpellSchool", b =>
                {
                    b.HasOne("skyforger.models.spells.Spell", null)
                        .WithMany("School")
                        .HasForeignKey("SpellId");
                });

            modelBuilder.Entity("skyforger.models.SpellSubSchool", b =>
                {
                    b.HasOne("skyforger.models.spells.Spell", null)
                        .WithMany("SubSchool")
                        .HasForeignKey("SpellId");
                });

            modelBuilder.Entity("skyforger.models.common.ManaClass", b =>
                {
                    b.HasOne("skyforger.models.spells.Spell", null)
                        .WithMany("ManaClass")
                        .HasForeignKey("SpellId");
                });

            modelBuilder.Entity("skyforger.models.spells.Focus", b =>
                {
                    b.HasOne("skyforger.models.spells.Spell", null)
                        .WithMany("Focus")
                        .HasForeignKey("SpellId");
                });

            modelBuilder.Entity("skyforger.models.spells.MaterialComponent", b =>
                {
                    b.HasOne("skyforger.models.spells.Spell", null)
                        .WithMany("MaterialComponents")
                        .HasForeignKey("SpellId");
                });

            modelBuilder.Entity("skyforger.models.spells.SpellAction", b =>
                {
                    b.HasOne("skyforger.models.spells.Spell", null)
                        .WithMany("Action")
                        .HasForeignKey("SpellId");
                });
#pragma warning restore 612, 618
        }
    }
}
